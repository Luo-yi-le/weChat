[33mcommit e7db78a3ddfbc3a965a6999f1b6fa412c09741bc[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m
Author: lonely <2318927272@qq.com>
Date:   Thu May 12 22:24:13 2022 +0800

    添加Rule

[1mdiff --git a/package.json b/package.json[m
[1mindex 50d7342..fe01899 100644[m
[1m--- a/package.json[m
[1m+++ b/package.json[m
[36m@@ -68,6 +68,7 @@[m
     "@types/jest": "^27.4.1",[m
     "@types/jsonwebtoken": "^8.5.6",[m
     "@types/koa": "^2.13.4",[m
[32m+[m[32m    "@types/lodash": "^4.14.182",[m
     "@types/node": "17",[m
     "cross-env": "^7.0.3",[m
     "jest": "^27.5.1",[m
[1mdiff --git a/src/annotation/README.md b/src/annotation/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..c5b8e20[m
[1m--- /dev/null[m
[1m+++ b/src/annotation/README.md[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m# 注解[m
[1mdiff --git a/src/annotation/Rule/index.ts b/src/annotation/Rule/index.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..7ba063b[m
[1m--- /dev/null[m
[1m+++ b/src/annotation/Rule/index.ts[m
[36m@@ -0,0 +1,128 @@[m
[32m+[m[32mimport * as Joi from 'joi';[m
[32m+[m[32mimport {[m
[32m+[m[32m  getClassMetadata,[m
[32m+[m[32m  getPropertyType,[m
[32m+[m[32m  attachClassMetadata,[m
[32m+[m[32m  saveClassMetadata,[m
[32m+[m[32m} from '@midwayjs/decorator';[m
[32m+[m[32mimport { RuleOptions, ColumnOptions } from './rule';[m
[32m+[m[32mimport { RuleType } from '@midwayjs/validate';[m
[32m+[m[32mconst RULES_KEY = 'common:rules';[m
[32m+[m
[32m+[m[32mexport function Rule(rule: any, options: RuleOptions = { required: true }) {[m
[32m+[m[32m  return (...args: any[]) => {[m
[32m+[m[32m    if (args[1]) {[m
[32m+[m[32m      // 函数装饰器[m
[32m+[m[32m      const [target, propertyKey] = args;[m
[32m+[m[32m      if (!Joi.isSchema(rule)) {[m
[32m+[m[32m        rule = Joi.object(getClassMetadata(RULES_KEY, rule)).meta({[m
[32m+[m[32m          id: rule.name,[m
[32m+[m[32m        });[m
[32m+[m[32m        if (getPropertyType(target, propertyKey).name === 'Array') {[m
[32m+[m[32m          rule = Joi.array().items(rule);[m
[32m+[m[32m          if (options.min) {[m
[32m+[m[32m            rule = rule.min(options.min);[m
[32m+[m[32m          }[m
[32m+[m[32m          if (options.max) {[m
[32m+[m[32m            rule = rule.max(options.max);[m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
[32m+[m[32m        if (options.required) {[m
[32m+[m[32m          rule = rule.required();[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m      attachClassMetadata(RULES_KEY, rule, target, propertyKey);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      //类的装饰器[m
[32m+[m[32m      const rules = getClassMetadata(RULES_KEY, rule);[m
[32m+[m[32m      if (rules) {[m
[32m+[m[32m        let currentRule = getClassMetadata(RULES_KEY, args[0]);[m
[32m+[m[32m        currentRule =[m
[32m+[m[32m          currentRule !== null && currentRule !== void 0 ? currentRule : {};[m
[32m+[m[32m        Object.keys(rules).map(item => {[m
[32m+[m[32m          if (!currentRule[item]) {[m
[32m+[m[32m            currentRule[item] = rules[item];[m
[32m+[m[32m          }[m
[32m+[m[32m        });[m
[32m+[m[32m        saveClassMetadata(RULES_KEY, currentRule, args[0]);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  };[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport class Column {[m
[32m+[m[32m  Required(type: Types, required?: false, message?: any): Joi.AnySchema<any> {[m
[32m+[m[32m    if (required) {[m
[32m+[m[32m      return this[type]()[m
[32m+[m[32m        .required()[m
[32m+[m[32m        .error((err: any) => new Error(message || err));[m
[32m+[m[32m    } else {[m
[32m+[m[32m      return this[type]();[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  string(): Joi.StringSchema {[m
[32m+[m[32m    return RuleType.string();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  number(): Joi.NumberSchema {[m
[32m+[m[32m    return RuleType.number();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  object(): Joi.ObjectSchema {[m
[32m+[m[32m    return RuleType.object();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  boolean(): Joi.BooleanSchema {[m
[32m+[m[32m    return RuleType.boolean();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  any(): Joi.AnySchema {[m
[32m+[m[32m    return RuleType.any();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  alternatives(): Joi.AlternativesSchema {[m
[32m+[m[32m    return RuleType.alternatives();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  symbol(): Joi.SymbolSchema {[m
[32m+[m[32m    return RuleType.symbol();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  binary(): Joi.BinarySchema {[m
[32m+[m[32m    return RuleType.binary();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  array(): Joi.ArraySchema {[m
[32m+[m[32m    return RuleType.array();[m
[32m+[m[32m  }[m
[32m+[m[32m  date(): Joi.DateSchema {[m
[32m+[m[32m    return RuleType.date();[m
[32m+[m[32m  }[m
[32m+[m[32m  function(): Joi.FunctionSchema {[m
[32m+[m[32m    return RuleType.function();[m
[32m+[m[32m  }[m
[32m+[m[32m  link(): Joi.LinkSchema {[m
[32m+[m[32m    return RuleType.link();[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mtype Types =[m
[32m+[m[32m  | 'any'[m
[32m+[m[32m  | 'alternatives'[m
[32m+[m[32m  | 'array'[m
[32m+[m[32m  | 'boolean'[m
[32m+[m[32m  | 'binary'[m
[32m+[m[32m  | 'date'[m
[32m+[m[32m  | 'function'[m
[32m+[m[32m  | 'link'[m
[32m+[m[32m  | 'number'[m
[32m+[m[32m  | 'object'[m
[32m+[m[32m  | 'string'[m
[32m+[m[32m  | 'symbol';[m
[32m+[m
[32m+[m[32minterface Type {[m
[32m+[m[32m  Array: any;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport const ColumnRule: ColumnOptions = new Column();[m
[1mdiff --git a/src/annotation/Rule/rule.d.ts b/src/annotation/Rule/rule.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..813bec1[m
[1m--- /dev/null[m
[1m+++ b/src/annotation/Rule/rule.d.ts[m
[36m@@ -0,0 +1,59 @@[m
[32m+[m[32mimport * as joi from 'joi';[m
[32m+[m[32mexport interface RuleOptions {[m
[32m+[m[32m  required?: boolean;[m
[32m+[m[32m  min?: number;[m
[32m+[m[32m  max?: number;[m
[32m+[m[32m}[m
[32m+[m[32mexport declare function Rule([m
[32m+[m[32m  rule: any,[m
[32m+[m[32m  options?: RuleOptions[m
[32m+[m[32m): (...args: any[]) => void;[m
[32m+[m[32mexport { joi as RuleType };[m
[32m+[m
[32m+[m[32mexport declare type Types =[m
[32m+[m[32m  | 'any'[m
[32m+[m[32m  | 'alternatives'[m
[32m+[m[32m  | 'array'[m
[32m+[m[32m  | 'boolean'[m
[32m+[m[32m  | 'binary'[m
[32m+[m[32m  | 'date'[m
[32m+[m[32m  | 'function'[m
[32m+[m[32m  | 'link'[m
[32m+[m[32m  | 'number'[m
[32m+[m[32m  | 'object'[m
[32m+[m[32m  | 'string'[m
[32m+[m[32m  | 'symbol';[m
[32m+[m
[32m+[m[32mexport declare class ColumnOptions {[m
[32m+[m[32m  array: () => joi.ArraySchema;[m
[32m+[m[32m  boolean: () => joi.BooleanSchema;[m
[32m+[m[32m  string: () => joi.StringSchema;[m
[32m+[m[32m  number: () => joi.NumberSchema;[m
[32m+[m[32m  object: () => joi.ObjectSchema;[m
[32m+[m[32m  any: () => joi.AnySchema;[m
[32m+[m[32m  alternatives: () => joi.AlternativesSchema;[m
[32m+[m[32m  symbol: () => joi.SymbolSchema;[m
[32m+[m[32m  binary: () => joi.BinarySchema;[m
[32m+[m[32m  date: () => joi.DateSchema;[m
[32m+[m[32m  function: () => joi.FunctionSchema;[m
[32m+[m[32m  link: () => joi.LinkSchema;[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * 非空校验[m
[32m+[m[32m   * @param type 类型[m
[32m+[m[32m   * @param required 是否必填[m
[32m+[m[32m   * @param message 错误信息[m
[32m+[m[32m   * @returns Error[m
[32m+[m[32m   */[m
[32m+[m[32m  Required(type: Types, required?: boolean, message?: any) {[m
[32m+[m[32m    return ([m
[32m+[m[32m      (required &&[m
[32m+[m[32m        this[type]()[m
[32m+[m[32m          .required()[m
[32m+[m[32m          .error(err => new Error(message || err))) ||[m
[32m+[m[32m      this[type]()[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// export declare const ColumnRule: Column = new Column();[m
[1mdiff --git a/src/config/config.local.ts b/src/config/config.local.ts[m
[1mindex 64a7f77..7413623 100644[m
[1m--- a/src/config/config.local.ts[m
[1m+++ b/src/config/config.local.ts[m
[36m@@ -8,10 +8,10 @@[m [mimport { BaseEntitySubscriber } from './../global/subscriber/baseEntitySubscribe[m
 export default {[m
   orm: {[m
     type: 'mysql',[m
[31m-    host: '1.15.133.109',[m
[32m+[m[32m    host: '127.0.0.1',[m
     port: 3306,[m
[31m-    username: 'cool',[m
[31m-    password: 'mzrWJNkKRsejJPfD',[m
[32m+[m[32m    username: 'root',[m
[32m+[m[32m    password: '123456',[m
     database: 'cool',[m
     // 自动建表 注意：线上部署的时候不要使用，有可能导致数据丢失[m
     synchronize: true,[m
[1mdiff --git a/src/global/comm/Rule/index.ts b/src/global/comm/Rule/index.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..2f75ab5[m
[1m--- /dev/null[m
[1m+++ b/src/global/comm/Rule/index.ts[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32mimport { RuleType } from '@midwayjs/validate';[m
[32m+[m
[32m+[m[32mclass ColumnRule {[m
[32m+[m[32m  Required() {[m
[32m+[m[32m    return RuleType.string()[m
[32m+[m[32m      .required()[m
[32m+[m[32m      .error((err: any) => new Error(err));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  String() {[m
[32m+[m[32m    return RuleType.string();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  RequiredMessage(message: any) {[m
[32m+[m[32m    return RuleType.string()[m
[32m+[m[32m      .required()[m
[32m+[m[32m      .error(err => new Error(message));[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport const columnRule: ColumnRule = new ColumnRule();[m
[1mdiff --git a/src/modules/base/service/sys/user.ts b/src/modules/base/service/sys/user.ts[m
[1mindex 985ff18..90d2df0 100644[m
[1m--- a/src/modules/base/service/sys/user.ts[m
[1m+++ b/src/modules/base/service/sys/user.ts[m
[36m@@ -125,7 +125,7 @@[m [mexport class BaseSysUserService extends BaseService {[m
       username: param.username,[m
     });[m
     if (!_.isEmpty(exists)) {[m
[31m-      throw new CoolCommException('用户名已经存在~');[m
[32m+[m[32m      return '用户名已经存在~';[m
     }[m
     param.password = md5(param.password);[m
     await this.baseSysUserEntity.save(param);[m
[1mdiff --git a/src/modules/wechat/entities/account.ts b/src/modules/wechat/entities/account.ts[m
[1mindex 48685a2..55b6ea9 100644[m
[1m--- a/src/modules/wechat/entities/account.ts[m
[1m+++ b/src/modules/wechat/entities/account.ts[m
[36m@@ -1,13 +1,11 @@[m
 import { Column, Index, Generated, PrimaryGeneratedColumn } from 'typeorm';[m
 import { EntityModel } from '@midwayjs/orm';[m
 import { BaseEntity } from './../../../global/entity/baseEntity';[m
[31m-import { Rule, RuleType } from '@midwayjs/validate';[m
[31m-[m
[31m-function error(err) {[m
[31m-  console.log(err);[m
[31m-  return new Error(err + ':' + '不能为空');[m
[31m-}[m
[32m+[m[32mimport { RuleType } from '@midwayjs/validate';[m
[32m+[m[32mimport { columnRule } from './../../../global/comm/Rule';[m
[32m+[m[32mimport { Rule, ColumnRule } from './../../../annotation/Rule';[m
 [m
[32m+[m[32mColumnRule.Required('any');[m
 /**[m
  * 微信公众号账号[m
  */[m
[36m@@ -16,33 +14,26 @@[m [mexport class WXAccount extends BaseEntity {[m
   @Column({ comment: '用户token', default: '' })[m
   accessToken: string;[m
 [m
[31m-  @Rule([m
[31m-    RuleType.string()[m
[31m-      .required()[m
[31m-      .error(err => new Error('公众号App-Secret不能为空'))[m
[31m-  )[m
[32m+[m[32m  @Rule(ColumnRule.Required('string', true, '公众号App-Secret不能为空'))[m
   @Column({ comment: '公众号App-Secret' })[m
   appSecret: string;[m
 [m
   @Rule([m
[31m-    RuleType.string()[m
[31m-      .required()[m
[31m-      .error(err => new Error('accountWeixin 公众号微信号不能为空'))[m
[32m+[m[32m    ColumnRule.Required('string', true, 'accountWeixin公众号微信号不能为空')[m
   )[m
[31m-  @Rule(RuleType.string().required())[m
   @Column({ comment: '公众号微信号' })[m
   accountWeixin: string;[m
 [m
[31m-  @Rule(RuleType.string().required())[m
[32m+[m[32m  @Rule(ColumnRule.Required('string', true, 'appId 微信公众账号原始ID'))[m
   @Column({ comment: '微信公众账号原始ID' })[m
   appId: string;[m
 [m
[31m-  @Rule(RuleType.string().required())[m
[32m+[m[32m  @Rule(RuleType.string(), { required: false })[m
   @Column({ comment: '公众号类型，1－服务号，2－订阅号，3－企业号' })[m
   accountType: string;[m
 [m
[31m-  @Rule(RuleType.string().required(), { required: false })[m
[31m-  @Column({ comment: ' 描述' })[m
[32m+[m[32m  @Rule(RuleType.string())[m
[32m+[m[32m  @Column({ comment: ' 描述', default: '' })[m
   accountDesc: string;[m
 [m
   @Rule(RuleType.string().required())[m
[1mdiff --git a/src/modules/wechat/service/accountService.ts b/src/modules/wechat/service/accountService.ts[m
[1mindex 42eaaa1..5b63786 100644[m
[1m--- a/src/modules/wechat/service/accountService.ts[m
[1m+++ b/src/modules/wechat/service/accountService.ts[m
[36m@@ -57,7 +57,7 @@[m [mexport class WXAccountService extends BaseService {[m
       originalId: account.originalId,[m
     });[m
     if (!_.isEmpty(exists)) {[m
[31m-      throw new CoolCommException('公众号[' + account.name + ']已经存在~');[m
[32m+[m[32m      return '公众号[' + account.name + ']已经存在~';[m
     }[m
     await this.wxAccount.save(account);[m
     return account.id;[m
